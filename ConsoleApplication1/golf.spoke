macro {
		$1{{$2}}
	}: ($1=Array<T>, $2=Closure(T,bool))
	{
		return $1=>(a)
			if($2(a))
				yield a
	}

macro {
		$1>>$2
	}: ($1=int, $2=int)
	{
		return ($1<=$2)=>
			yield $1
			$1=$1+1
	}


macro {
		$1<$2>
	}:( $1=Array<T>, $2=Closure(T,bool))
	{
		return $1=>(a)
			if($2(a))
				return a
	}


macro {
		$1+=$2
	}: ($1=int, $2=int)
	{
		$1=$2+v
		return $1
	}

macro {
		$1-=$2
	}:( $1=int, $2=int)
	{
		$1=$1-$2
		return $1
	}

macro {
		$1--
	}:( $1=int)
	{
		g=$1
		$1=g-1
		return g
	}

macro {
		$1++
	}: ($1=int )
	{
		g=$1
		$1=g+1
		return g
	}

macro {
		$1**$2
	}:( $1=string, $2=int)
	{
		a=0
		strb=""
		(a<=$2)=>
			strb=strb+$1
			a=a+1
		return strb
	}

macro {
		$1?$2:$3
	}: ($1 = bool, $2=Closure(->*) ,$3=Closure(->*))
	{
		if $1
			return $2()
		else
			return $3()
	}

macro {
		$1=>$2
	}: ($1 = Array<T>, $2 = Closure(T->T))
	{
		ind=0
		ars=[]
		tops:
		if ind<$1.length()
			ars.add( $2($1[ind]) )
			goto tops
	
		return ars
	}

macro {
		$1=>$2
	}: ($1 = bool, $2 = Closure(T->T))
	{
		ars=[]
		tops:
		if $1
			yield $2($1[ind])
			ind=ind+1	
			goto tops
			
		return ars
	}

macro {
		$1=>$2
	}: ($1 = Array<T>, $2 = Closure(T,int -> T))
	{
		ind=0
		ars=[]
		tops:
		if ind<$1.length()
			ars.add( $2($1[ind]) ,ind )
			goto tops
	
		return ars
	
	}


class Grid
	Rows=[]
	CurrentCells=[]

	def AddRow()
		Rows.add([CurrentCells])
		CurrentCells=[]
		
	def AddCell(value)
		CurrentCells.add(value) 

	def Opens(dde)
		dde(15)



class Main
	def ()
		myGrid=create Grid()
		
		ROWS=100
		COLS=100

		vr=[1>>ROWS]
		ir=[1>>COLS]

		vr=>|(R)
			ir=>|(C)
				myGrid.AddCell(nextRandom(0,999))
			myGrid.AddRow()
		
 		rowTotals=[]
		colTotals=[]


		eatMyShit=|(f)=>
			writeLine("fuck It all",f)


		myGrid.Opens(eatMyShit)

		myGrid.Rows[0]=>|(c)
			colTotals.add(0)


		myGrid.Rows=>|(R)
			rowTotals.add(0)
			colIndex=0
			R=>|(C)
				rowTotals[rowTotals.length()-1]=rowTotals.last()+C
				colTotals[colIndex]=colTotals[colIndex]+C

				colIndex=colIndex+1
				
				if C<10
					write("00"+C)
				else
					if C<100
						write("0"+C)
					else
						write(C)
				write("  ")
			writeLine(" ")

		writeLine("")
		writeLine("Row Totals")
		Highest=0

		rowTotals=>|(r)
			writeLine(r)

		writeLine("")

		writeLine("Col Totals")
		
		colTotals=>|(D)
			writeLine(D)

		writeLine("")

		rowTotals=>|(r)
			if Highest<r
				Highest=r

		colTotals=>|(c)
			if Highest<c
				Highest=c

		writeLine("")
		writeLine("Highest")
		writeLine(Highest)
		writeLine("Highest")
